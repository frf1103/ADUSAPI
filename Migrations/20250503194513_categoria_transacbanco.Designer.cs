// <auto-generated />
using System;
using ADUSAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ADUSAPI.Migrations
{
    [DbContext(typeof(ADUSContext))]
    [Migration("20250503194513_categoria_transacbanco")]
    partial class categoria_transacbanco
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ADUSAPI.Entities.ADUSLog", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("datalog")
                        .HasColumnType("datetime2");

                    b.Property<string>("idconta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("transacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("uid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ADUSLogs");
                });

            modelBuilder.Entity("ADUSAPI.Entities.Assinatura", b =>
                {
                    b.Property<string>("id")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("datains")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dataup")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("datavenda")
                        .HasColumnType("datetime2");

                    b.Property<int>("idformapagto")
                        .HasColumnType("int");

                    b.Property<string>("idparceiro")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("idplataforma")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("observacao")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("plataforma")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<double>("preco")
                        .HasPrecision(18, 2)
                        .HasColumnType("float(18)");

                    b.Property<int>("qtd")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<double>("valor")
                        .HasPrecision(18, 2)
                        .HasColumnType("float(18)");

                    b.HasKey("id");

                    b.HasIndex("idparceiro");

                    b.ToTable("Assinaturas", (string)null);
                });

            modelBuilder.Entity("ADUSAPI.Entities.Banco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Bancos", (string)null);
                });

            modelBuilder.Entity("ADUSAPI.Entities.CentroCusto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("CentroCusto", (string)null);
                });

            modelBuilder.Entity("ADUSAPI.Entities.ContaCorrente", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Agencia")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int>("BancoId")
                        .HasColumnType("int");

                    b.Property<string>("ContaBanco")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Titular")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("BancoId");

                    b.ToTable("ContaCorrente", (string)null);
                });

            modelBuilder.Entity("ADUSAPI.Entities.CotacaoMoeda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CotacaoData")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CotacaoValor")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("IdMoeda")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdMoeda");

                    b.ToTable("CotacoesMoeda", (string)null);
                });

            modelBuilder.Entity("ADUSAPI.Entities.Moeda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Moedas", (string)null);
                });

            modelBuilder.Entity("ADUSAPI.Entities.MovimentoCaixa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataMov")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdCentroCusto")
                        .HasColumnType("int");

                    b.Property<string>("IdContaCorrente")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("IdTransacao")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Sinal")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("idmovbanco")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("idparceiro")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdCentroCusto");

                    b.HasIndex("IdContaCorrente");

                    b.HasIndex("IdTransacao");

                    b.HasIndex("idparceiro");

                    b.ToTable("MovimentoCaixa", (string)null);
                });

            modelBuilder.Entity("ADUSAPI.Entities.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoIBGE")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<int>("IdUF")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("IdUF");

                    b.ToTable("Municipios", (string)null);
                });

            modelBuilder.Entity("ADUSAPI.Entities.ParametrosGuru", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("idcategoria")
                        .HasColumnType("int");

                    b.Property<int?>("idccusto")
                        .HasColumnType("int");

                    b.Property<string>("idconta")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("idparceiro")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("idtransacao")
                        .HasColumnType("int");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("ultdata")
                        .HasColumnType("datetime2");

                    b.Property<string>("urlsub")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("urltransac")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("id");

                    b.HasIndex("idcategoria");

                    b.HasIndex("idccusto");

                    b.HasIndex("idconta");

                    b.HasIndex("idparceiro");

                    b.HasIndex("idtransacao");

                    b.ToTable("ParametrosGuru", (string)null);

                    b.HasData(
                        new
                        {
                            id = 1,
                            token = "9e883bc2-e356-440e-b28b-327532ace5d2|LuSXsELCchQMjGN0A9CICbQJCLwhglsstYRPPVr57fb50393",
                            ultdata = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            urlsub = "https://digitalmanager.guru/api/v2/subscriptions",
                            urltransac = "https://digitalmanager.guru/api/v2/transactions"
                        },
                        new
                        {
                            id = 2,
                            token = "$aact_prod_000MzkwODA2MWY2OGM3MWRlMDU2NWM3MzJlNzZmNGZhZGY6OmIyNmM2YWIzLThmOGUtNDY5Mi1hNDNkLWJiNDk4YTRmNGNjOTo6JGFhY2hfZTI5MTFhMGMtYjdkNi00MzhlLWI2OTEtOTYxNzYzMmI2NDBk",
                            ultdata = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            urlsub = " ",
                            urltransac = "https://api.asaas.com/v3/payments"
                        },
                        new
                        {
                            id = 3,
                            token = "sk_871c3d7c606a4be3bd48d4f86b68c58f",
                            ultdata = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            urlsub = " ",
                            urltransac = "https://api.pagar.me/core/v5/payables"
                        });
                });

            modelBuilder.Entity("ADUSAPI.Entities.Parceiro", b =>
                {
                    b.Property<string>("uid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int>("Cidade")
                        .HasColumnType("int");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtNascimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("EstadoCivil")
                        .HasColumnType("int");

                    b.Property<string>("Fantasia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Fone1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdRepresentante")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Profissao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Registro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sexo")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.Property<int>("TipodePessoa")
                        .HasColumnType("int");

                    b.Property<int>("UF")
                        .HasColumnType("int");

                    b.Property<DateTime?>("datains")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dataup")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("observacao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("uid");

                    b.HasIndex("Cidade");

                    b.HasIndex("IdRepresentante");

                    b.HasIndex("UF");

                    b.ToTable("Parceiros", (string)null);
                });

            modelBuilder.Entity("ADUSAPI.Entities.Parcela", b =>
                {
                    b.Property<string>("id")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("acrescimos")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("comissao")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime?>("databaixa")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dataestimadapagto")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("datains")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dataup")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("datavencimento")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("descontoantecipacao")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("descontoplataforma")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("descontos")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("idassinatura")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("idcaixa")
                        .HasColumnType("int");

                    b.Property<string>("idcheckout")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("idformapagto")
                        .HasColumnType("int");

                    b.Property<string>("nossonumero")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("numparcela")
                        .HasColumnType("int");

                    b.Property<string>("observacao")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("plataforma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("valor")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("valorliquido")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("id");

                    b.HasIndex("idassinatura");

                    b.ToTable("Parcelas", (string)null);
                });

            modelBuilder.Entity("ADUSAPI.Entities.PlanoConta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("IdMae")
                        .HasColumnType("int");

                    b.Property<string>("Sinal")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.HasIndex("IdMae");

                    b.ToTable("PlanoConta", (string)null);
                });

            modelBuilder.Entity("ADUSAPI.Entities.TransacBanco", b =>
                {
                    b.Property<string>("idtransacbanco")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("idbanco")
                        .HasColumnType("int");

                    b.Property<int>("idcategoria")
                        .HasColumnType("int");

                    b.Property<int>("idtransacao")
                        .HasColumnType("int");

                    b.HasKey("idtransacbanco", "idbanco");

                    b.HasIndex("idbanco");

                    b.HasIndex("idcategoria");

                    b.HasIndex("idtransacao");

                    b.ToTable("TransacBanco", (string)null);
                });

            modelBuilder.Entity("ADUSAPI.Entities.Transacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Contrapartida")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sinal")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.ToTable("Transacoes", (string)null);
                });

            modelBuilder.Entity("ADUSAPI.Entities.UF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoIBGE")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Id");

                    b.ToTable("UFs", (string)null);
                });

            modelBuilder.Entity("ADUSAPI.Entities.Assinatura", b =>
                {
                    b.HasOne("ADUSAPI.Entities.Parceiro", "parceiro")
                        .WithMany("assinaturas")
                        .HasForeignKey("idparceiro")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("parceiro");
                });

            modelBuilder.Entity("ADUSAPI.Entities.ContaCorrente", b =>
                {
                    b.HasOne("ADUSAPI.Entities.Banco", "Banco")
                        .WithMany("ContasCorrentes")
                        .HasForeignKey("BancoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Banco");
                });

            modelBuilder.Entity("ADUSAPI.Entities.CotacaoMoeda", b =>
                {
                    b.HasOne("ADUSAPI.Entities.Moeda", "moeda")
                        .WithMany("cotacaoMoedas")
                        .HasForeignKey("IdMoeda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("moeda");
                });

            modelBuilder.Entity("ADUSAPI.Entities.MovimentoCaixa", b =>
                {
                    b.HasOne("ADUSAPI.Entities.PlanoConta", "Categoria")
                        .WithMany("movimentoCaixas")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ADUSAPI.Entities.CentroCusto", "CentroCusto")
                        .WithMany("movimentoCaixas")
                        .HasForeignKey("IdCentroCusto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ADUSAPI.Entities.ContaCorrente", "ContaCorrente")
                        .WithMany("movimentoCaixas")
                        .HasForeignKey("IdContaCorrente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ADUSAPI.Entities.Transacao", "Transacao")
                        .WithMany("movs")
                        .HasForeignKey("IdTransacao")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ADUSAPI.Entities.Parceiro", "parceiro")
                        .WithMany("movimentoCaixas")
                        .HasForeignKey("idparceiro")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("CentroCusto");

                    b.Navigation("ContaCorrente");

                    b.Navigation("Transacao");

                    b.Navigation("parceiro");
                });

            modelBuilder.Entity("ADUSAPI.Entities.Municipio", b =>
                {
                    b.HasOne("ADUSAPI.Entities.UF", "uF")
                        .WithMany("Municipios")
                        .HasForeignKey("IdUF")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("uF");
                });

            modelBuilder.Entity("ADUSAPI.Entities.ParametrosGuru", b =>
                {
                    b.HasOne("ADUSAPI.Entities.PlanoConta", "Categoria")
                        .WithMany("parametros")
                        .HasForeignKey("idcategoria")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ADUSAPI.Entities.CentroCusto", "CentroCusto")
                        .WithMany("parametros")
                        .HasForeignKey("idccusto")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ADUSAPI.Entities.ContaCorrente", "ContaCorrente")
                        .WithMany("parametros")
                        .HasForeignKey("idconta")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ADUSAPI.Entities.Parceiro", "parceiro")
                        .WithMany("parametros")
                        .HasForeignKey("idparceiro")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ADUSAPI.Entities.Transacao", "Transacao")
                        .WithMany("parametros")
                        .HasForeignKey("idtransacao")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Categoria");

                    b.Navigation("CentroCusto");

                    b.Navigation("ContaCorrente");

                    b.Navigation("Transacao");

                    b.Navigation("parceiro");
                });

            modelBuilder.Entity("ADUSAPI.Entities.Parceiro", b =>
                {
                    b.HasOne("ADUSAPI.Entities.Municipio", "cidade")
                        .WithMany("parceiros")
                        .HasForeignKey("Cidade")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ADUSAPI.Entities.Parceiro", "Representante")
                        .WithMany("empresas")
                        .HasForeignKey("IdRepresentante")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ADUSAPI.Entities.UF", "uf")
                        .WithMany("Parceiros")
                        .HasForeignKey("UF")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Representante");

                    b.Navigation("cidade");

                    b.Navigation("uf");
                });

            modelBuilder.Entity("ADUSAPI.Entities.Parcela", b =>
                {
                    b.HasOne("ADUSAPI.Entities.Assinatura", "assinatura")
                        .WithMany("parcelas")
                        .HasForeignKey("idassinatura")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("assinatura");
                });

            modelBuilder.Entity("ADUSAPI.Entities.PlanoConta", b =>
                {
                    b.HasOne("ADUSAPI.Entities.PlanoConta", "Mae")
                        .WithMany("Filhos")
                        .HasForeignKey("IdMae")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Mae");
                });

            modelBuilder.Entity("ADUSAPI.Entities.TransacBanco", b =>
                {
                    b.HasOne("ADUSAPI.Entities.Banco", "banco")
                        .WithMany("transacs")
                        .HasForeignKey("idbanco")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ADUSAPI.Entities.PlanoConta", "planoConta")
                        .WithMany("transacs")
                        .HasForeignKey("idcategoria")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ADUSAPI.Entities.Transacao", "transacao")
                        .WithMany("transacs")
                        .HasForeignKey("idtransacao")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("banco");

                    b.Navigation("planoConta");

                    b.Navigation("transacao");
                });

            modelBuilder.Entity("ADUSAPI.Entities.Assinatura", b =>
                {
                    b.Navigation("parcelas");
                });

            modelBuilder.Entity("ADUSAPI.Entities.Banco", b =>
                {
                    b.Navigation("ContasCorrentes");

                    b.Navigation("transacs");
                });

            modelBuilder.Entity("ADUSAPI.Entities.CentroCusto", b =>
                {
                    b.Navigation("movimentoCaixas");

                    b.Navigation("parametros");
                });

            modelBuilder.Entity("ADUSAPI.Entities.ContaCorrente", b =>
                {
                    b.Navigation("movimentoCaixas");

                    b.Navigation("parametros");
                });

            modelBuilder.Entity("ADUSAPI.Entities.Moeda", b =>
                {
                    b.Navigation("cotacaoMoedas");
                });

            modelBuilder.Entity("ADUSAPI.Entities.Municipio", b =>
                {
                    b.Navigation("parceiros");
                });

            modelBuilder.Entity("ADUSAPI.Entities.Parceiro", b =>
                {
                    b.Navigation("assinaturas");

                    b.Navigation("empresas");

                    b.Navigation("movimentoCaixas");

                    b.Navigation("parametros");
                });

            modelBuilder.Entity("ADUSAPI.Entities.PlanoConta", b =>
                {
                    b.Navigation("Filhos");

                    b.Navigation("movimentoCaixas");

                    b.Navigation("parametros");

                    b.Navigation("transacs");
                });

            modelBuilder.Entity("ADUSAPI.Entities.Transacao", b =>
                {
                    b.Navigation("movs");

                    b.Navigation("parametros");

                    b.Navigation("transacs");
                });

            modelBuilder.Entity("ADUSAPI.Entities.UF", b =>
                {
                    b.Navigation("Municipios");

                    b.Navigation("Parceiros");
                });
#pragma warning restore 612, 618
        }
    }
}
